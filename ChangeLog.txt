==========================
Changelog for project VISR
==========================


Release 0.13.0
==============

* BREAKING CHANGE: Target export files (visr-config.cmake, visr-config-version.cmake)
  are now located in the root directory of the build tree (instead of in
  $VISR-build/src/). That means dependent projects need to update their VISR_DIR
  setting when using a build tree.
* FEATURE: Refactored time-frequency framework (partly in librcl, partly in libpml).
* FEATURE: Added time API to represent time (at block or sample resolution)
  within VISR components.
* FEATURE: Reworked efl library. Added architecture-dependent optimised implementations
  for some functions on Intel and ARM platforms.
* FEATURE: Panning library: Updated CAP (compensated amplitude panning) algorithm.
* FEATURE: Panningdsp library (new): Specialised amplitude panning components (and
  corresponding parameter types) for sample-exact panning trajectories, incl.
  arbitrary transition times.
* FEATURE: pml::ListenerPosition orientations use internal quaternion representation,
  added Quaternion class and operations (librbbl).
* FEATURE: librcl: Reimplementation of BiquadIirFilter for improved performance
  (using filter function in libefl, which can be optimised per architecture).
* FEATURE: Convolver components (librcl): Added optional parameter inputs to change
  all routings at runtime with a single parameter message.
* FEATURE: librcl: Added Parameter{Input|Output}Terminator components to satisfy
  unused parameter ports.
* FEATURE: librrl: Added system profiling feature (enabled by CMake option
  BUILD_RUNTIME_SYSTEM_PROFILING)
* FEATURE: Reworked parameter type registration, introduced template class
  visr::ParameterRegistrar.
* UPDATE: libpythonsupport: Changed module loading from deprecated 'imp' to
  'importlib' package, upgraded code to support versions <= Python 3.9.
* BUGFIX: libreverbobject: Object level was applied twice on the reverb level,
  leading to disproportionate attenutation of reverb if the object gain was reduced.
* BUGFIX: libreverbobject: Avoid creation of text file "leta_decorrelation_filters.dat"
  unless debug output is enabled in the source file.
* CLEANUP: Removed unused applications scene_decoder, network_audio_streamer, and gain_matrix.
* CLEANUP: All remaining applications are installed (in component standalone_applications) if
  BUILD_STANDALONE_APPLICATIONS is activated.
* CLEANUP: Renamed test application binary names: feedthrough_app->feedthrough,
  matrix_convolver_app->matrix_convolver
  This is to ease porting of VISR to new platforms and to avoid binary compatibility
  issues with different compilers/standard libraries.
* BUILD: Support component-based exporting. This allows the use in external projects
  with a smaller number of dependencies (especially if only shared VISR libraries
  are used by external projects.) This is optional, not using COMPONENTS in
  find_package(VISR) retains the previous behaviour.
* BUILD: Revised target exporting configuration to add find_dependency directives
  for 3rdparty libraries (Boost and Threads) if the components static_libraries
  static_pic_libraries are built.
* BUILD: Include pybind11 (including finding of Python) via add_subdirectory().
  This is the way preferred by pybind11 according to its documentation.
* BUILD: Added options BUILD_INSTALL_STATIC_PIC_LIBRARIES for building atatic
  libraries with position-independent code (PIC).
  This is a specialist option for creating self-contained shared libraries or shared modules
  (e.g., DAW plugins or Max/MSP plugins) on Unix platforms.
* BUILD: Added options BUILD_DISABLE_THREADS (default OFF), BUILD_USE_SNDFILE_LIBRARY,
  (default ON) and BUILD_AUDIOINTERFACES_PORTAUDIO  (default ON) to reduce 3rd-party
  dependencies when needed.. This is mainly for specialist builds.
* 3RDPARTY: Updated pybind11 to version 2.9.0.
* 3RDPARTY: Added FFT libraries kissfft and ffts as git subtrees and build them internally.

Patch release 0.12.2
--------------------

* FEATURE: Updated metadapter engine and processors to version 0.9.1, switching to 'versioned' metadpter subtree. Tested Metadapter integration in visr_renderer and DAW plugins.
* FEATURE: Add Max/MSP externals as optional component in installation packages. Not selected by default.
* FEATURE: support loading of nested Python sub-packages of the form "package.sub1.sub2".
* FEATURE: libaudiointerfaces: Added optional parameters "inputDevice" and "outputDevice" to Portaudio-specific audio interface configuration.
* FEATURE: reverb object renderer: Use crossfading between late reverberation tails by default, enable switch to old implementation.
* FEATURE: reverb object renderer: Provide default decorrelation filters if no filter path is provided. This avoids the lack of late reverb if no decorrelation filters are supplied.

* BUILD: Make documentation building independent of $PYTHONPATH and $PATH settings.
* BUILD: Fix documentation build warnings.

* FIX: Under some conditions (esp. "odd" transition sample numbers), the rcl::CrossfadingFilterMatrix
     and rbbl::CrossfadingConvolverUniform created erroneous transitions, which muted the filter
     after the transition time.
* FIX: Severe buffering error in Max/MSP external wrapper, with potential memory corruptions.
* FIX: Added missing support for host API "MME" (Windows-only) in PortAudio configuration.

Patch release 0.12.1
--------------------

* FIX: On Mac OS, use rpaths again in the build tree. This allows running and
       debugging without installing.
* FIX: Removed public dependency of librcl on Boost. Boost is still used internally, but only private.
* Cleanup of CMakeList.txt files, remove obsolete dependency on thread library.

Release 0.12.0
====================

* First public release.
* FEATURE: Allow nested Python submodules and namespaced class names when loading Python components in
         C++.
* DOCU: Major restructuring of user manual,preaparation for first public release.
* DOCU: Changed Sphinx HTML theme to Alabaster.

Patch release 0.11.8
--------------------

* FIX: Documentation generation to make sure that the Python externals are
  built before they are used in the docu generation.

Patch release 0.11.7
--------------------

* FIX: Documentation generation with autodoc on Mac OS X
* FIX: Removed libpython dependency in the signalflows Python external by disabling the VisrRenderer binding.
* Updated documentation: Added VISR-Python tutorial, first version of object model description.

Patch release 0.11.6
--------------------

* FIX: Documentation generation for builds without Python.

Patch release 0.11.5
--------------------

* Updated loudspeaker configuration files for BS-2051 configs and BBC BRIR data sets.
* Added Python functions for documentation generation.
* Documentation: Added VISR_BST documentation, moved loudspeaker config description to separate chapter.
* FIX: GitLab-CI configuration: Caching problems

Patch release 0.11.4
--------------------

* FIX: Fixed package generation if BUILD_PYTHON_SUPPORT is deactivated.
* FIX: Activated native Jack audio interface support on GitLab-CI for Linux and Mac OS X.
* Cleaned up GitLab-CI configuration, worked around caching problem.

Patch release 0.11.3
--------------------

* FIX: Resolved problem with Python3.7 on Mac OS X (Bug #24 Python 3.7 support on Mac OS faulty).
  through updating Pybind11 to version 2.2.4
* FIX: Fixed BBC BRIR loudspeaker configuration files (duplicated labels for system G, center speaker M+000 missing in most configurations)
* Provide mechanism to export the used Python version a a target property.
* FIX: panning::LoudspeakerConfig: Made 3rd coordiante of loudspeaker positions optional if dimension==2.
* New Python-based loudspeaker configuration generation function in Python.
* Replaced loudspeaker configurations for the BBC BRIR dataset in visr_bst and the BS-2051 configs
  in $VISR/config/generic.
* Updated Gitlab CI configuration (build Python-free "core" version as well).

Patch release 0.11.2
--------------------

* Change RPATH handling to allow easier manipulation in Mac OS installers, especially from externals projects.
* This makes Python externals on MacOS unusable in local builds, they have to be installed.
* Mac OS installer searches for system-wide installations of the Anaconda Python distibution and Python 3 installed through HomeBrew.
* Updated documentation for python_runner standalone application

Patch release 0.11.1
--------------------

* Added libboost_atomic to installed 3rd-party libraries (formal dependency of libboost_thread)
* Fixed problems in Gitlab-CI configuration, provide support for Ubuntu 18
* User documentation for standalone applications

Version 0.11.0
==============

* Added sphinx-based user documentation (userdoc) and code reference documentation (apidoc)
* Added GitLab CI configuration (.gitlab-ci.yml) for continuous integration and deployment.
* Component-based installers for Windows and Mac OS X (based on PKG / ProductBuild )
* Fixing of Python rpaths in Mac OS X during installation.
* Cleaned up CMake target dependencies to reduce shared library dependencies (especially for Python)
* Link standalone applications to shared libraries.
* Changed defines VISR_<LIB>_STATIC_LIBRARY for libraries: define is now necessary when using the static
  variant instead of the shared (automatically done by CMake exported targets).
* Added metadapter code to repo (as git subtree)

Version 0.10.0
==============

- Brought prototypical_restructuring branch into main development line
- Established gitflow versioning and release management scheme
- Support CMake target exporting

Version 0.8.2
=============

- Baseline renderer: Implemented object equalisation (activated vie --object-eq-sections or -e with argument > 0)

Version 0.8.1
=============

- Baseline renderer: Provide option NATIVE_JACK for using the native jack audio driver
- Matrix convolver: Renamed audio backend option "JACK" to JACK_NATIVE for consistency.

Version 0.8.0
=============

- First implementation of ChannelObject objects.
- First implementation of HOA (Higher-Order Ambisonics) rendering using AllRAD.
  * Hitherto developed in the hoaSourceObject
  * Debugging and evaluation not complete yet, but no detrimental influence on other rendering techniques expected.
- Impemented central versioning scheme for project.
  * Possibly this will be refined by moving the implementation (version amcros and strings) into a separate file.
